Linux File System

>> In Linux everything is treated as a file system. These are of 3 types
    1) Directory file/ folder, it starts with d
    2) Normal file , starts with -
    3) Link file, starts with l


$ clear  --> To clear the screen

$ mkdir <folder-name>  --> create a folder/directory 

$ cd <folder-name>  --> changing our current directory 

$ pwd  --> to check my current folder/directory

$ cd ..  --> to come out of directory/folder

$ rmdir <directory-name>  --> to delete directory which is empty


$ rm -rf <directory-name>   --> To delete a directory/folder which has files in it

$ ls --> display files present in current working directory

$ ls -l --> display files present in current working directory in alphabetical order (a-z) one below the other

$ ls -lr --> display files present in current working directory in reverse alphabetical order(z-a) one below the other

$ ls -lt  --> display files present in current working directory with latest file on top 

$ ls -ltr ---> display files present in current working directory with old file on top



==============================================================================================

$ rm <file-name> --> Delete file 

$ rm *.txt  --> delete every file of current directory with txt as extension

$ rm a*.txt  --> delete all txt files which starts with a

mv : To Move and To Rename 

$ mv <current-location> <new-location>  --> changing location

$ mv <current-name <new-name> --> renaming the file


==============================================================================================
$ cat <file-name> 
$ cat aws.txt ---> It will display data/content of that file

$ cat > telusko.txt ----> It will create a file and allow us to add data/content ( use cntl+D to come out of edit mode)

$ cat >> <file-name>
$ cat >> f1.txt --> append data/content in existing file

$ cat -n f1.txt ---> Display data with numbering

$ tac file.txt ---> display/print the content from bottom to top 

$ rev file.txt --> reverse each line and each word of that line

==============================================================================================

Copy Data : cp

==============================================================================================
$ cp alien.txt telusko.txt --> alien file data will be added in telusko file ( If there is content/data in telusko thn that will be replaced by new content coming from alien.txt file)

Copy multiple files data into another file

==============================================================================================
cat alien.txt aws.txt > f2.txt    ---> content of alien and aws file will be added into f2 file

$ head f1.txt
$ tail f1.txt    

 Both will print content of files like cat

$ head -n 5 f1.txt ---> prints / displays first 5 lines of that file 

$ head -n 10.txt ---> prints / displays first 10 lines of that file 

$ tail -n 5 f1.txt ---> prints / display last 5 lines of the file 

==============================================================================================
 history --> command will display all commands which we have used in a particular VM

==============================================================================================

grep

grep stands for Global Regular Expression Print

It's a command-line utility in Linux used to search for patterns in text using regular expression. It prints the matching lines


$ grep 'aws' f1.txt  --> It will print the lines which has aws by considering case sensitivity

$ grep -i 'aws' f1.txt  --> It will print the lines which has aws by ignoring case sensitivity

$ grep -n 'AWS' f1.txt --> It will print the lines which has aws along side line number

$ grep -v 'AWS' f1.txt --> It will print the lines which does not has aws in it

$ grep -i 'AWS' *  --> search for aws keyword in all files of pwd

Count the number of matches

$ grep -c "Exception" error.log --> Outputs how many lines contain "Exception" in error.log.

$ grep -w "fail" results.txt --> Matches only the word fail, not failed or failing.

==============================================================================================


$ diff aws.txt f1.txt   --> To See diff between these 2 files (aws and f1) are file names

$ wc aws.txt  --> Word count command


==============================================================================================
Text Editors in Linux 


--> vi (visual editor)  --> it is a default editor in Linux machines

--> Using 'vi' we can create new files and we can modify existing file data

--> vi command is having 3 modes
   1) command mode ( we can just open file and navigate or see the content, we cannot edit or modify or add content in this mode)
    
    $ vi <filename> 
    
    $ vi devops.txt  ( if a file by the name devops is available thn it will open that existing file if not it will create a new file)


   2) insert mode ( to edit that file or to add the content into the file) press i in the keyboard to get into insert mode


   3) esc mode ( to come out of insert mode) press esc in keyboard 
     
      --> To Save the changes we have made in the file and close the file --> :wq
      --> To close the file without saving changes --> :q!

File Creation in Linux 
==============================================================================================

touch --> To Create an empty file

cat --> To create file with data without opening any editor ( cat can be used to view and for copy too please refer to nodes above)

cp --> Copy one file data into another file ( cp aws.txt devops.txt)

vi --> create and open file for editing (vi f.txt)


Reading Data from a file 
==============================================================================================

vi --> open the file and we could able to see and navigate over content in command mode

cat --> print/display the file data from top to bottom as it is present in the file

tac --> print/display the data from bottom to top 

rev --> prints/display data in reverse order

head --> prints/display first 10 lines of the file

tail  -->  prints/display last 10 lines of the file


==============================================================================================


SED  command
--> SED -> stream editor

--> SED is used to process the data ( substitute , delete, insert ...)

--> SED is a very powerful command in Linux using which we can perform operations on the file without opening it

$ sed 's/Azure/Aws/' aws.txt

Replace first occurance of 'Azure' with 'AWS' in  file  ( Azure and AWS are words here in the file) without saving changes in original file

--------------

$ sed -i 's/Azure/Aws/' aws.txt

Replace first occurance of 'Azure' with 'AWS' in  file and save changes in original file

--------------

$ sed -i 's/Aws/Azure/g' aws.txt

Replace all  occurance of 'Aws' with 'Azure' in  file and save changes in original file

--------------
$ sed -i '3d' aws.txt

Delete 3rd line of aws.txt file

-------------
$ sed -i '$d' aws.txt
Delete last tile of aws.txt file

------------

$ sed '/AWS/d' f1.txt

Delete all lines which contains AWS in f1.txt file
------------
$ sed -n '3,11p' f1.txt

Print the data from f1.txt file from line 3 to 11

------------
$ sed '11i\ ai tool for shell scripting' f1.txt

Insert data "ai tool for shell scripting" before 11th line in f1.txt

------------

$ sed -i '11i\ ai tool for shell scripting' f1.txt
Insert data "ai tool for shell scripting" before 11th line in f1.txt and save that changes into the file

------------

$ sed '$a\I am loving linux' f1.txt

Add the data after the last line


==============================================================================================

User Accounts
--------------

--> Linux is a multi user based OS  --> One Linux Machine can create multiple user accounts and multiple users can perform multi tasking

'ec2-user' is a default user in amazon Linux VM

--> Add new user
$ sudo useradd Pavan

--> Add password for that new user
$ sudo passwd Pavan

Changing password for user Pavan.
New password:
BAD PASSWORD: The password is shorter than 8 characters
Retype new password:
passwd: all authentication tokens updated successfully.

--> display users created 
$ cat /etc/passwd

--> switch user
$ whoami
ec2-user
$ sudo su Pavan

$ pwd
/home/ec2-user

--> Go to users home directory
[Pavan@ip-172-31-0-108 ec2-user]$ cd ~

$ pwd
/home/Pavan


---> You need to be ec2-user to make all these changes 
(get connected to same machine as ec2 -user to perform the following operation or execute $ exit command to come backto ec2-user)

--> Delete user
$ sudo userdel Pavan

--> Delete user along with user home directory
$ sudo userdel Pavan --remove

After deleting We we try to switch back to Pavan
$ sudo su Pavan
su: user Pavan does not exist or the user entry does not contain all the required fields

--> Changing username 

$ sudo usermod -l <newname> <oldname>
$ sudo usermod -l kamleshkumar kamlesh


User Groups
---------------

When we create user in Linux, for every user one group also be created with a given username
--> Create new group
$ sudo groupadd <groupname>

$ sudo group telusko


--> Adding user to a group

$ sudo usermod -aG <groupname> <username>

$ sudo usermod -aG telusko vazra

--> Display users in a group

$ sudo lid -g <groupname> 
$ sudo lid -g telusko
 vazra(uid=1003)

--> diplay user belong to which group
$ id vazra
uid=1003(vazra) gid=1003(vazra) groups=1003(vazra),1004(telusko)


$ id faheem
uid=1002(faheem) gid=1002(faheem) groups=1002(faheem)


$ id kamleshkumar
uid=1001(kamleshkumar) gid=1001(kamlesh) groups=1001(kamlesh)

$ sudo usermod -aG telusko kamleshkumar

$ sudo lid -g telusko
 vazra(uid=1003)
 kamleshkumar(uid=1001)

--> Removing user from a group
$ sudo gpasswd -d vazra telusko
Removing user vazra from group telusko

--> Changing group name 

$ sudo groupmod -n <newname> <oldname>

--> Delete the group
$ sudo groupdel <groupname>
$ sudo groupdel teluskoai

===================================================



